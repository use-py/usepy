import{_ as a,o as n,c as o,M as l}from"./chunks/framework.1eb289b4.js";const D=JSON.parse('{"title":"to_string","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"api/converter/to_string.md","filePath":"api/converter/to_string.md","lastUpdated":1728486692000}'),t={name:"api/converter/to_string.md"};function p(e,s,r,c,i,y){return n(),o("div",null,s[0]||(s[0]=[l(`<h1 id="to-string" tabindex="-1">to_string <a class="header-anchor" href="#to-string" aria-label="Permalink to &quot;to_string&quot;">​</a></h1><p>将值转换为字符串</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> usepy </span><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> to_string</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><code>value</code>: 要转换的值</li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><ul><li><code>str</code>: 转换后的字符串</li></ul><h3 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> to_string</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">123</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">123</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> to_string</span><span style="color:#666666;">([</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">])</span></span>
<span class="line"><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">1, 2, 3</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> to_string</span><span style="color:#666666;">({</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a: 1, b: 2</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> to_string</span><span style="color:#666666;">(</span><span style="color:#4D9375;">None</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#C98A7D99;">&#39;&#39;</span></span></code></pre></div>`,9)]))}const C=a(t,[["render",p]]);export{D as __pageData,C as default};
