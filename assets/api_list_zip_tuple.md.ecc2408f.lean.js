import{_ as a,o as p,c as l,M as o}from"./chunks/framework.1eb289b4.js";const C=JSON.parse('{"title":"zip_tuple","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"api/list/zip_tuple.md","filePath":"api/list/zip_tuple.md","lastUpdated":1728486692000}'),n={name:"api/list/zip_tuple.md"};function e(t,s,r,c,y,i){return p(),l("div",null,s[0]||(s[0]=[o(`<h1 id="zip-tuple" tabindex="-1">zip_tuple <a class="header-anchor" href="#zip-tuple" aria-label="Permalink to &quot;zip_tuple&quot;">​</a></h1><p>将多个列表打包成元组列表。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> usepy </span><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> zip_tuple</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><code>*lists</code>: 要打包的列表zip_tuple</li></ul><h3 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> zip_tuple</span><span style="color:#666666;">([</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">],</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">c</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">])</span></span>
<span class="line"><span style="color:#666666;">[(</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#4C9A91;">3</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">c</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)]</span></span></code></pre></div>`,7)]))}const d=a(n,[["render",e]]);export{C as __pageData,d as default};
