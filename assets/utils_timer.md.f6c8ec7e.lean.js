import{_ as a,o as n,c as l,M as p}from"./chunks/framework.1eb289b4.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"utils/timer.md","filePath":"utils/timer.md","lastUpdated":1676621506000}'),o={name:"utils/timer.md"};function e(t,s,r,c,y,D){return n(),l("div",null,s[0]||(s[0]=[p(`<h2 id="usetimer" tabindex="-1">useTimer <a class="header-anchor" href="#usetimer" aria-label="Permalink to &quot;useTimer&quot;">​</a></h2><p>定时器</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#758575DD;"># 每隔1秒执行一次</span></span>
<span class="line"><span style="color:#DBD7CAEE;">timer </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> useTimer</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">test</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">lambda</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">print</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">test</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">timer</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">scheduler</span><span style="color:#666666;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;"># 取消定时器</span></span>
<span class="line"><span style="color:#DBD7CAEE;">timer</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">cancel</span><span style="color:#666666;">()</span></span></code></pre></div><h2 id="usetimermanager" tabindex="-1">useTimerManager <a class="header-anchor" href="#usetimermanager" aria-label="Permalink to &quot;useTimerManager&quot;">​</a></h2><p>定时器管理器</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#DBD7CAEE;">timer1 </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> useTimer</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">test</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">lambda</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">print</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">test</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;"># 每隔1秒执行一次</span></span>
<span class="line"><span style="color:#DBD7CAEE;">timer2 </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> useTimer</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">test2</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">lambda</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">print</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">test2</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">),</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;"># 每隔2秒执行一次</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">timer_manager </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> useTimerManager</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">timer1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> timer2</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">timer_manager</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">execute</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;"># 执行定时器</span></span></code></pre></div>`,6)]))}const C=a(o,[["render",e]]);export{E as __pageData,C as default};
