import{_ as a,o,c as n,M as l}from"./chunks/framework.1eb289b4.js";const d=JSON.parse('{"title":"sort_by_key","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"api/dict/sort_by_key.md","filePath":"api/dict/sort_by_key.md","lastUpdated":1728486692000}'),p={name:"api/dict/sort_by_key.md"};function e(t,s,r,c,y,i){return o(),n("div",null,s[0]||(s[0]=[l(`<h1 id="sort-by-key" tabindex="-1">sort_by_key <a class="header-anchor" href="#sort-by-key" aria-label="Permalink to &quot;sort_by_key&quot;">​</a></h1><p>根据字典的key排序</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> usepy </span><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> sort_by_key</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><code>original_dict</code>: 要排序的字典</li><li><code>az</code>: 排序方式，默认为True，表示升序</li></ul><h3 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> sort_by_key</span><span style="color:#666666;">({</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">c</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">{</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">c</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">}</span></span></code></pre></div>`,7)]))}const C=a(p,[["render",e]]);export{d as __pageData,C as default};
