import{_ as a,o as n,c as l,M as o}from"./chunks/framework.1eb289b4.js";const D=JSON.parse('{"title":"parse","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"api/date/parse.md","filePath":"api/date/parse.md","lastUpdated":1728486692000}'),p={name:"api/date/parse.md"};function e(t,s,r,c,i,y){return n(),l("div",null,s[0]||(s[0]=[o(`<h1 id="parse" tabindex="-1">parse <a class="header-anchor" href="#parse" aria-label="Permalink to &quot;parse&quot;">​</a></h1><p>解析日期时间字符串</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> usepy </span><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> parse</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><code>time_str</code>: 要解析的时间字符串</li><li><code>fmt</code>: 时间字符串的格式（可选）</li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><ul><li><code>datetime</code>: 解析后的日期时间对象</li></ul><h3 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> usepy </span><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> parse</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">format</span></span>
<span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> dt </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> parse</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">2023-04-01 12:30:45</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">format</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">dt</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">2023-04-01 12:30:45</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> dt </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> parse</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">2023年04月01日 12时30分45秒</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">format</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">dt</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">2023-04-01 12:30:45</span><span style="color:#C98A7D99;">&#39;</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#dbd7caee;">&lt;/rewritten_file&gt;</span></span></code></pre></div>`,10)]))}const C=a(p,[["render",e]]);export{D as __pageData,C as default};
