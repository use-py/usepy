import{_ as a,o as n,c as l,M as o}from"./chunks/framework.1eb289b4.js";const d=JSON.parse('{"title":"is_async_function","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"api/validator/is_async_function.md","filePath":"api/validator/is_async_function.md","lastUpdated":1728486692000}'),p={name:"api/validator/is_async_function.md"};function t(e,s,c,r,i,y){return n(),l("div",null,s[0]||(s[0]=[o(`<h1 id="is-async-function" tabindex="-1">is_async_function <a class="header-anchor" href="#is-async-function" aria-label="Permalink to &quot;is_async_function&quot;">​</a></h1><p>检查给定的函数是否为异步函数</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> usepy </span><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> is_async_function</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><code>func</code>: 要检查的函数</li></ul><h3 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki vitesse-dark"><code><span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> asyncio</span></span>
<span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">async_func</span><span style="color:#666666;">():</span></span>
<span class="line"><span style="color:#C99076;">...</span><span style="color:#DBD7CAEE;">     </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> asyncio</span><span style="color:#666666;">.</span><span style="color:#DBD7CAEE;">sleep</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">1</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">def</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">sync_func</span><span style="color:#666666;">():</span></span>
<span class="line"><span style="color:#C99076;">...</span><span style="color:#DBD7CAEE;">     </span><span style="color:#4D9375;">pass</span></span>
<span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> is_async_function</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">async_func</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#4D9375;">True</span></span>
<span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> is_async_function</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">sync_func</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#4D9375;">False</span></span>
<span class="line"><span style="color:#CB7676;">&gt;&gt;&gt;</span><span style="color:#DBD7CAEE;"> is_async_function</span><span style="color:#666666;">(</span><span style="color:#CB7676;">lambda</span><span style="color:#DBD7CAEE;"> x</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> x</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#4D9375;">False</span></span></code></pre></div>`,7)]))}const E=a(p,[["render",t]]);export{d as __pageData,E as default};
